# 테스트 스크립트
apiVersion: v1
kind: ConfigMap
metadata:
  name: k6-script
data:
  test.js: |
    import http from 'k6/http';
    import { check, sleep } from 'k6';

    export const options = {
      vus: 1,
      duration: '5m',   // 5분 동안 계속 반복
      linger: true      // 종료 후에도 프로세스 살아 있게
    };

    export default function () {
      // throw:false → 네트워크 오류 Exception으로 던지지 않음
      const res = http.get('http://jayon0927-coupon-backend.default.svc.cluster.local:8080', { throw: false });

      // 4xx/5xx 는 실패로 기록하지만 테스트는 계속
      check(res, { 'status < 400': r => r.status < 400 });

      sleep(30);
    }

---
# k6 Deployment (xk6-dashboard 내장 이미지 사용)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: simple-k6
spec:
  replicas: 1
  selector:
    matchLabels:
      app: simple-k6
  template:
    metadata:
      labels:
        app: simple-k6
    spec:
      containers:
        - name: k6
          image: ghcr.io/grafana/xk6-dashboard:0.7.0-alpha.2 # 대시보드 내장
          imagePullPolicy: IfNotPresent
          env:               # 웹 대시보드 활성화
            - name: K6_WEB_DASHBOARD
              value: "true"
            - name: K6_WEB_DASHBOARD_PORT
              value: "5665"  # 컨테이너 내부 포트
          command: ["/bin/sh","-c"]
          args:
            # -l(linger) 덕분에 테스트 종료 뒤에도 Pod가 exit 0, 대시보드 계속 제공
            - k6 run -l --out dashboard=/var/log/k6/dashboard.json /scripts/test.js
          ports:
            - containerPort: 5665
              name: dashboard
          volumeMounts:
            - name: k6-script
              mountPath: /scripts
      volumes:
        - name: k6-script
          configMap:
            name: k6-script
---
# NodePort Service
apiVersion: v1
kind: Service
metadata:
  name: k6-dashboard
spec:
  type: NodePort
  selector:
    app: simple-k6
  ports:
    - name: http
      port: 5665
      targetPort: 5665
      nodePort: 30999
